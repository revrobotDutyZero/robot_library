global_costmap:
    map_type: costmap
    global_frame: map
    robot_base_frame: base_link
    update_frequency: 2.0 # 5.0
    publish_frequency: 0.0
    static_map: true
    rolling_window: false
    footprint:  [[0.250,0],[0.245,-0.165], [0.225,-0.220], [0.165,-0.240],
                [0,-0.245],[-0.165,-0.240],[-0.225,-0.220],[-0.245,-0.165],
                [-0.250,0],[-0.245,0.165], [-0.225,0.220], [-0.165,0.240],
                [0,0.245], [0.165,0.240],  [0.225,0.220],  [0.245,0.165]]
    footprint_padding: 0.0001
    transform_tolerance: 0.5
    plugins:
        # Add the data from the map to the costmap
        - {name: static_map, type: "costmap_2d::StaticLayer"}
        # Track the obstacle from the sensors and add them to the costmap
        - {name: obstacles, type: "costmap_2d::VoxelLayer"} # 3D costmap
        # Add inflation around the obstacles
        - {name: inflation_layer, type: "costmap_2d::InflationLayer"}


    static_map:
        map_topic: /map
        #If true, unknown values in the map messages are translated directly to the layer. 
        #Otherwise, unknown values in the map message are translated as FREE_SPACE in the layer. 
        #default:true
        track_unknown_space: true
        #default:-1
        unknown_cost_value: -1

    obstacles:
        observation_sources: laser_scan_sensor
        track_unknown_space: true
        origin_z: 0.0
        z_resolution: 0.1
        z_voxels: 5
        publish_voxel_map: True
        laser_scan_sensor: {
            obstacle_range: 4.5,
            raytrace_range: 5.0,
            sensor_frame: base_laser, 
            data_type: LaserScan, 
            topic: /scan, 
            marking: true, 
            clearing: true,
            expected_update_rate: 10,
            inf_is_valid: true,
            min_obstacle_height: 0.2,
            max_obstacle_height: 0.3
        }

    inflation_layer:
        inflation_radius: 0.55
        cost_scaling_factor: 1.2 #2.58
